{"version":3,"sources":["images/marvel.svg","components/Navbar.js","images/marvelcomics.png","components/BannerComponent.js","App.js","Hq.js","index.js"],"names":["_path","_path2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMarvel","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","id","fill","d","ForwardRef","NavbarComponent","Navbar","className","variant","Brand","href","BannerComponent","Jumbotron","Row","Col","lg","src","MarvelComics","alt","App","useState","herois","setHerois","heroiId","setHeroiId","carregando","setCarregando","erroApi","setErroApi","a","process","url","fetch","then","response","json","data","results","catch","useEffect","document","carregaSuperherois","Container","Spinner","animation","role","Card","Header","Body","Text","Form","Group","Label","Control","as","size","onChange","e","value","custom","disabled","selected","arrayHerois","map","heroi","push","name","listaHerois","split","to","Button","useParams","listaHqs","setListaHqs","error","ListaHqs","ListagemHqs","Hq","Img","thumbnail","path","extension","Title","series","carregaHq","ReactDOM","render","StrictMode","basename","component","exact","getElementById"],"mappings":"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","file":"static/js/main.7ddfd25a.chunk.js","sourcesContent":["var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMarvel(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 128,\n    height: 80,\n    viewBox: \"0 0 500 200\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#f0141e\",\n    d: \"M0 0h500v200H0z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M423.12 46.619V15.991h-85.706l-14.11 102.282-13.94-102.282h-30.908l3.454 27.312c-3.563-7-16.211-27.312-44.061-27.312-.185-.012-30.945 0-30.945 0l-.128 149.084-22.523-149.084-40.484-.012-23.304 154.467.013-154.455H81.726l-13.965 86.768-13.604-86.768H15.399v167.932h30.523v-80.944l13.886 80.944h16.224l13.69-80.944v80.944h58.838l3.558-25.83h23.688l3.558 25.83 57.771.037h.042v-.037H237.249v-54.504l7.074-1.024 14.661 55.565h29.883l-.012-.037H288.94l-19.238-65.11c9.741-7.179 20.752-25.379 17.822-42.798v-.006c.036.226 18.164 108.026 18.164 108.026l35.534-.11 24.279-152.203v152.203h57.617v-30.199h-27.344v-38.507h27.344v-30.66h-27.344v-37.94h27.346zM155.713 131.47l8.387-71.802 8.69 71.802h-17.077zm88.708-33.155c-2.344 1.123-4.784 1.685-7.172 1.691v-54.01c.037 0 .093-.006.153-.006 2.38-.018 20.203.714 20.203 26.709 0 13.598-6.06 22.174-13.184 25.616zm240.186 55.383v30.188h-56.214V15.967h30.272v137.731h25.942z\",\n    fill: \"#fff\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMarvel);\nexport default __webpack_public_path__ + \"static/media/marvel.db01731e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport {ReactComponent as MarvelLogo} from '../images/marvel.svg'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Navbar from 'react-bootstrap/Navbar'\n\n\nfunction NavbarComponent(){\n    return(\n        <Navbar className=\"navbar\" variant=\"dark\">\n            <Navbar.Brand className=\"mx-auto\" href=\"#home\"><MarvelLogo/></Navbar.Brand>\n        </Navbar>\n    )\n}\n\nexport default NavbarComponent","export default __webpack_public_path__ + \"static/media/marvelcomics.6e741aa2.png\";","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport MarvelComics from '../images/marvelcomics.png'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\nfunction BannerComponent(){\n    return(\n        <Jumbotron className=\"jumbotron\">\n            <Row>\n                <Col lg={6}>\n                    <h1>Marvel HQs</h1>\n                    <p>Trabalho desenvolvido para o curso stack MERN.</p>\n                    <br/>\n                    <p className=\"descricao\">Estamos consumindo uma API fornecida pela Marvel para listar as HQs do herói escolhido por você. Infelizmente, nós só temos acesso aos primeiros 20 resultados que a API nos fornece. 😉</p>\n                    <p>Desenvolvido por: Pedro Mack Navarro e Nickolas da Silva Veiga</p>\n                    </Col>\n                    <Col lg={6}>\n                    <img className=\"bannerImg\" src={MarvelComics} alt=\"marvel comics logo\"/>\n                </Col>\n            </Row>\n        </Jumbotron>\n    )\n}\n\nexport default BannerComponent","//Importação de tudo que é usado\nimport React, {useEffect, useState} from 'react'\nimport './css/estilo.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Link} from 'react-router-dom'\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport NavbarComponent from './components/Navbar'\nimport BannerComponent from './components/BannerComponent'\n\nconst App = () =>{\n\n  //Definição dos Hooks\n  const [herois, setHerois] = useState([])\n  const [heroiId, setHeroiId] = useState('')\n  const [carregando, setCarregando] = useState(false)\n  const [erroApi, setErroApi] = useState(false)\n\n  //Carregando os super-heróis e definindo o título na inicialização\n  useEffect(()=>{\n    document.title= \"Marvel HQs\"\n    carregaSuperherois()\n  },[])\n\n  //Busca dos dados na API\n  async function carregaSuperherois(){\n    setCarregando(true)\n    //Atribuição da apiKey com a chave em arquivo local\n    const apiKey = process.env.REACT_APP_APIKEY_MARVEL\n    let url = `https://gateway.marvel.com/v1/public/characters?${apiKey}`\n    await fetch(url)\n    //Busca e tratamento dos dados\n    .then(response => response.json())\n    .then(data =>{\n      setHerois(data.data.results)\n    })\n    //Verificação se houve erros\n    .catch(function(){\n      setErroApi(true)\n    })\n    setCarregando(false)\n  }\n\n  //Função para listagem do super-heróis no select\n  function listaHerois(props){\n    const arrayHerois = []\n    const herois = props\n    \n    //Guarda os dados de cada super-herói em um elemento do array para ser tratado futuramente \n    herois.map((heroi) => \n      arrayHerois.push(heroi.id + \"/\" + heroi.name)\n    )\n    return arrayHerois\n  }\n\n  return(\n    <>\n      <NavbarComponent/>\n      <BannerComponent/>\n      <Container>\n        <Row className=\"d-flex justify-content-center\">\n\n        {carregando &&\n          //Exibido se estiver carregando\n          <Spinner className=\"mt-5\" animation=\"border\" role=\"status\"/>\n        }\n\n        {!carregando &&\n          <Col lg={6}>\n          {erroApi &&\n            //Exibido se houve algum erro nos dados da API\n            <Card className=\"semBorda mb-4\">\n              <Card.Header className=\"cardCabeçalho\">Erro</Card.Header>\n              <Card.Body className=\"cardCorpo\">\n                <Card.Text>Não foi possível listar os super-heróis, tente novamente mais tarde.</Card.Text>\n              </Card.Body>\n          </Card>\n          }\n          {!erroApi &&\n            <Card className=\"semBorda mb-4\">\n            <Card.Header className=\"cardCabeçalho\">Procure o seu super-herói</Card.Header>\n            <Card.Body className=\"cardCorpo\">\n              <Form>\n                <Form.Group>\n                  <Form.Label>Selecionar:</Form.Label>\n                  <Form.Control className=\"select\" as=\"select\" size=\"lg\" onChange={e => setHeroiId(e.target.value)} custom>\n                    <option key=\"1\" disabled selected>Selecione o herói</option>\n\n                    {\n                      //Carregamento dos dados como <option> no select\n                      listaHerois(herois).map(heroi => {\n                        //Para cada herói é gerado um option com os respectivos valores\n                        return (<option key={heroi.split(\"/\")[0]} value={heroi.split(\"/\")[0]}>{heroi.split(\"/\")[1]}</option>)\n                      })\n                    }\n\n                  </Form.Control>\n                </Form.Group>\n              </Form>\n              <Row className=\"d-flex justify-content-center\">\n                {/*Passa a URL com o id do super-herói a ser pesquisado*/}\n                <Link to={`/Hq/${heroiId}`}>\n                  <Button className=\"semBorda botao\">Pesquisar</Button>\n                </Link>\n              </Row>\n            </Card.Body>\n          </Card>\n          }\n          </Col>\n        }\n        </Row>\n      </Container>\n    </>\n  )\n\n}\n\nexport default App\n","//Importação de tudo que é usado\nimport React, {useEffect, useState} from 'react'\nimport './css/estilo.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport NavbarComponent from './components/Navbar'\nimport { Link, useParams } from 'react-router-dom'\n\nconst App = () =>{\n\n    //Pega o Id passado na URL e armazena na variável Id\n    const {id} = useParams()\n\n    //Definição dos Hooks\n    const [listaHqs, setListaHqs] = useState([])\n    const [carregando, setCarregando] = useState(false)\n    const [erroApi, setErroApi] = useState(false)\n\n    //Carregando as HQs e definindo o título na inicialização\n    useEffect(()=>{\n        document.title= \"Marvel HQs\"\n        carregaHq()\n    },[])\n\n    //Busca dos dados na API\n    async function carregaHq(){\n        setCarregando(true)\n        //Atribuição da apiKey com a chave em arquivo local\n        const apiKey = process.env.REACT_APP_APIKEY_MARVEL\n        let url = `https://gateway.marvel.com/v1/public/characters/${id}/comics?${apiKey}`\n        //Busca e tratamento dos dados\n        await fetch(url)\n        .then(response => response.json())\n        .then(data =>{\n            setListaHqs(data.data.results)\n        })\n        //Verificação se houve erros\n        .catch(function(error){\n            setErroApi(true)        \n        })\n        setCarregando(false)\n    }\n\n    //Listagem das HQs\n    function ListaHqs(props){\n        const Hqs = props.listaHqs\n        //Percorre todo o array e gera o código para cada elemento do mesmo\n        const ListagemHqs = Hqs.map((Hq) =>\n            <Col lg={3}>\n                <Card lg={10} className=\"semBorda mb-4\">\n                    <Card.Img variant=\"top\" src={Hq.thumbnail.path+'/portrait_incredible.'+Hq.thumbnail.extension}/>\n                    <Card.Body className=\"cardCorpo\">\n                        <Card.Title>{Hq.series.name}</Card.Title>\n                    </Card.Body>\n                </Card>\n            </Col>\n        )\n        return(\n            <>{ListagemHqs}</>\n        )\n    }\n\n    return(\n        <>\n            <NavbarComponent/>\n                {erroApi &&\n                    //Exibido se houve algum erro nos dados da API\n                    <Row className=\"d-flex justify-content-center\">\n                        <h5 className=\"textoCentralizado\">Não foi possível listar os super-heróis, tente novamente mais tarde.</h5>\n                    </Row>\n                }\n\n                {carregando &&\n                    //Exibido se estiver carregando\n                    <Row className=\"d-flex justify-content-center\">\n                        <Spinner className=\"mt-5\" animation=\"border\" role=\"status\"/>\n                    </Row>\n                }\n                {!carregando &&\n                    <Container>\n                        {!erroApi &&\n                            <>\n                                <Row className=\"d-flex justify-content-center\">\n                                    {listaHqs.length <= 0 &&\n                                        //Exibido se a lista estiver vazia\n                                        <h5 className=\"textoCentralizado\">Esse super-herói não participou de nenhuma HQ</h5>\n                                    }\n                                    <ListaHqs listaHqs={listaHqs}/>\n                                </Row>\n                                <Row className=\"d-flex justify-content-center mb-4\">\n                                    <Link to=\"/\">\n                                        <Button className=\"semBorda botaoPreto\">Voltar</Button>\n                                    </Link>\n                                </Row>\n                            </>\n                        }\n                    </Container>\n                } \n        </>\n    )\n\n}\n\nexport default App","//Importação de tudo que é usado\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Hq from './Hq';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    {/*Definição do Router com basename compatível para o gh-pages*/}\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    {/*Implementação do Switch para não ocorrer erro nas trocas de páginas*/}\n      <Switch>\n    {/*Definição das rotas possíves, passando se necessários, os parâmetros requisitados*/}\n        <Route path=\"/\" component={App} exact/>\n        <Route path=\"/Hq/:id\" component={Hq}/>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}